// Code generated by hertz generator.

package api

import (
	"context"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	api "github.com/nnieie/golanglab5/cmd/api/biz/model/api"
)

// LikeAction .
// @router /like/action [POST]
func LikeAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.LikeActionRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.LikeActionResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetLikeList .
// @router /like/list [GET]
func GetLikeList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.GetLikeListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.GetLikeListResponse)

	c.JSON(consts.StatusOK, resp)
}

// CommentVideo .
// @router /comment/publish [POST]
func CommentVideo(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.CommentRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.CommentResponse)

	c.JSON(consts.StatusOK, resp)
}

// GetCommentList .
// @router /comment/list [GET]
func GetCommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.GetCommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.GetCommentListResponse)

	c.JSON(consts.StatusOK, resp)
}

// DeleteComment .
// @router /comment/delete [DELETE]
func DeleteComment(ctx context.Context, c *app.RequestContext) {
	var err error
	var req api.DeleteCommentRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	resp := new(api.DeleteCommentResponse)

	c.JSON(consts.StatusOK, resp)
}
